{"ast":null,"code":"import { SearchActionTypes } from \"../../types/user\";\nconst initialState = {\n  query: \"\",\n  loading: false,\n  type: \"\",\n  productsCount: 0,\n  users: [],\n  hashtags: []\n};\nexport const searchReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SearchActionTypes.FETCH_SEARCH:\n      return {\n        loading: true\n      };\n\n    case SearchActionTypes.FETCH_SEARCH_SUCCESS:\n      if (action.payload.query.charAt(0) === \"#\") {\n        const {\n          data,\n          query\n        } = action.payload;\n        console.log(\"inside reducer \", data);\n        return {\n          hashtags: data,\n          loading: false,\n          query\n        };\n      } else {\n        const {\n          data: {\n            productsCount,\n            users\n          },\n          query\n        } = action.payload;\n        return {\n          productsCount,\n          users,\n          loading: false,\n          query\n        };\n      }\n\n    case SearchActionTypes.FETCH_SEARCH_ERROR:\n      return {\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/morarualexandru/Desktop/OV landing/ovw/src/store/reducers/searchReducer.ts"],"names":["SearchActionTypes","initialState","query","loading","type","productsCount","users","hashtags","searchReducer","state","action","FETCH_SEARCH","FETCH_SEARCH_SUCCESS","payload","charAt","data","console","log","FETCH_SEARCH_ERROR"],"mappings":"AAAA,SAAuBA,iBAAvB,QAAgD,kBAAhD;AAEA,MAAMC,YAA0B,GAAG;AACjCC,EAAAA,KAAK,EAAE,EAD0B;AAEjCC,EAAAA,OAAO,EAAE,KAFwB;AAGjCC,EAAAA,IAAI,EAAE,EAH2B;AAIjCC,EAAAA,aAAa,EAAE,CAJkB;AAKjCC,EAAAA,KAAK,EAAE,EAL0B;AAMjCC,EAAAA,QAAQ,EAAE;AANuB,CAAnC;AASA,OAAO,MAAMC,aAAa,GAAG,YAGV;AAAA,MAFjBC,KAEiB,uEAFTR,YAES;AAAA,MADjBS,MACiB;;AACjB,UAAQA,MAAM,CAACN,IAAf;AACE,SAAKJ,iBAAiB,CAACW,YAAvB;AACE,aAAO;AAAER,QAAAA,OAAO,EAAE;AAAX,OAAP;;AACF,SAAKH,iBAAiB,CAACY,oBAAvB;AACE,UAAIF,MAAM,CAACG,OAAP,CAAeX,KAAf,CAAqBY,MAArB,CAA4B,CAA5B,MAAmC,GAAvC,EAA4C;AAC1C,cAAM;AAAEC,UAAAA,IAAF;AAAQb,UAAAA;AAAR,YAAkBQ,MAAM,CAACG,OAA/B;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,IAA/B;AACA,eAAO;AACLR,UAAAA,QAAQ,EAAEQ,IADL;AAELZ,UAAAA,OAAO,EAAE,KAFJ;AAGLD,UAAAA;AAHK,SAAP;AAKD,OARD,MAQO;AACL,cAAM;AACJa,UAAAA,IAAI,EAAE;AAAEV,YAAAA,aAAF;AAAiBC,YAAAA;AAAjB,WADF;AAEJJ,UAAAA;AAFI,YAGFQ,MAAM,CAACG,OAHX;AAIA,eAAO;AACLR,UAAAA,aADK;AAELC,UAAAA,KAFK;AAGLH,UAAAA,OAAO,EAAE,KAHJ;AAILD,UAAAA;AAJK,SAAP;AAMD;;AACH,SAAKF,iBAAiB,CAACkB,kBAAvB;AACE,aAAO;AAAEf,QAAAA,OAAO,EAAE;AAAX,OAAP;;AACF;AACE,aAAOM,KAAP;AA3BJ;AA6BD,CAjCM","sourcesContent":["import { ISearchState, SearchActionTypes } from \"../../types/user\";\n\nconst initialState: ISearchState = {\n  query: \"\",\n  loading: false,\n  type: \"\",\n  productsCount: 0,\n  users: [],\n  hashtags: [],\n};\n\nexport const searchReducer = (\n  state = initialState,\n  action: any\n): ISearchState => {\n  switch (action.type) {\n    case SearchActionTypes.FETCH_SEARCH:\n      return { loading: true };\n    case SearchActionTypes.FETCH_SEARCH_SUCCESS:\n      if (action.payload.query.charAt(0) === \"#\") {\n        const { data, query } = action.payload;\n        console.log(\"inside reducer \", data);\n        return {\n          hashtags: data,\n          loading: false,\n          query,\n        };\n      } else {\n        const {\n          data: { productsCount, users },\n          query,\n        } = action.payload;\n        return {\n          productsCount,\n          users,\n          loading: false,\n          query,\n        };\n      }\n    case SearchActionTypes.FETCH_SEARCH_ERROR:\n      return { loading: false };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}